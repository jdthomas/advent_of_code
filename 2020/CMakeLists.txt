cmake_minimum_required(VERSION 3.17)

project(advent_of_code_2020)

# set(CMAKE_CXX_COMPILER "clang++")
set(CMAKE_CXX_STANDARD 17)

function(add_advent_of_code_project PROBLEM_NUM)
  add_executable(advent_of_code_2020_${PROBLEM_NUM}
                 ${PROBLEM_NUM}/${PROBLEM_NUM}.cpp)
  target_link_libraries(advent_of_code_2020_${PROBLEM_NUM} fmt::fmt)
  target_link_libraries(advent_of_code_2020_${PROBLEM_NUM} range-v3::range-v3)
endfunction()

set(CMAKE_C_FLAGS " -Wall -Wextra -g ")

find_package(fmt REQUIRED)
include_directories(${fmt_INCLUDE_DIRS})

find_package(range-v3 REQUIRED)
include_directories(${range-v3_INCLUDE_DIRS})

add_advent_of_code_project(1)
add_advent_of_code_project(2)
add_advent_of_code_project(3)
add_advent_of_code_project(4)
add_advent_of_code_project(5)
add_advent_of_code_project(6)
add_advent_of_code_project(7)
add_advent_of_code_project(8)
add_advent_of_code_project(9)
add_advent_of_code_project(10)
add_advent_of_code_project(11)
add_advent_of_code_project(12)
add_advent_of_code_project(13)
add_advent_of_code_project(14)
add_advent_of_code_project(15)
add_advent_of_code_project(16)
add_advent_of_code_project(17)
add_advent_of_code_project(18)
add_advent_of_code_project(19)
add_advent_of_code_project(20)
# add_advent_of_code_project(21) add_advent_of_code_project(22)
# add_advent_of_code_project(23) add_advent_of_code_project(24)
# add_advent_of_code_project(25)
